name: container # ワークフロー名を決定

# トリガーの設定
on:
    push: # プッシュ(マージ)が発生したときにトリガー
        branches:
            - develop

# 環境変数の設定
env:
    OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
    OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
    OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
    OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
    OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    OCI_CLI_PASSPHRASE: ${{ secrets.OCI_CLI_PASSPHRASE }}

    frontend-build-and-push: # フロントエンドのビルドとプッシュを行うジョブ
        name: Frontend Build & Push
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository # リポジトリをチェックアウト
              uses: actions/checkout@v4

            - name: Docker build # Docker イメージをビルド
              run: docker build . --file react/Dockerfile --tag nrt.ocir.io/nrcmxxv7sjse/ec_service_test:nodejs-${{ github.sha }}

            - name: Login OCIR # OCIR にログイン
              uses: oracle-actions/login-ocir@v1.3.0
              with:
                auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

            - name: Push container image # コンテナイメージを OCIR にプッシュ
              run: docker push nrt.ocir.io/nrcmxxv7sjse/ec_service_test:nodejs-${{ github.sha }}

    backend-build-and-push: # バックエンドのビルドとプッシュを行うジョブ
        name: Backend Build & Push
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository # リポジトリをチェックアウト
              uses: actions/checkout@v4

            - name: Docker build # Docker イメージをビルド
              run: docker build . --file fastapi/Dockerfile --tag nrt.ocir.io/nrcmxxv7sjse/ec_service_test:python-${{ github.sha }}

            - name: Login OCIR # OCIR にログイン
              uses: oracle-actions/login-ocir@v1.3.0
              with:
                auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

            - name: Push container image # コンテナイメージを OCIR にプッシュ
              run: docker push nrt.ocir.io/nrcmxxv7sjse/ec_service_test:python-${{ github.sha }}